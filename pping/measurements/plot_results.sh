#!/bin/bash

# Plot the results from run_tests.sh
# Assumes files have same names and folder layout as generated by run_tests.sh

# $1 = root folder
# $2 = src-ip to filter RTT reports on (optional)

IFACE=${IFACE:-"ens192"}
OMIT=${OMIT:-60} #nr seconds to omit from result

IP_ARG=""
if [[ -v 2 ]]; then
    IP_ARG="-s $2"
fi

echo "Plotting comparsion graphs..."
./pping_compare_viz.py -i $1 -o ${1}/pping_comparison.png -I $IFACE -O $OMIT $IP_ARG

if [[ -f "${1}/e_pping/M2/pping.err.xz" ]]; then
    echo "Plotting eBPF pping map cleaning and lost events..."
    ./pping_err_viz.py -i ${1}/e_pping/M2/pping.err* -o ${1}/epping_mapcleaning.png -T "Map cleaning and lost events"
fi


for pping in no_pping k_pping e_pping; do
    echo -e "\nPlotting results for ${1}/${pping}..."

    if [[ -f "${1}/${pping}/M2/M2_stats.sar.xz" ]]; then
        echo "Plotting CPU load..."
        for M in "M1" "M2" "M3"; do
            ./sar_cpu_viz.py -i ${1}/${pping}/${M}/${M}_stats.sar* -o ${1}/${M}_cpu_${pping}.png -T "${M} cpu load $pping"
        done

        echo "Plotting traffic on interface $IFACE"
        ./sar_net_viz.py -i ${1}/${pping}/M2/M2_stats.sar* -o ${1}/M2_network_${IFACE}_${pping}.png -I $IFACE
    else
        echo "Warning: No sar data found!"
    fi

    if [[ -f "${1}/${pping}/M1/ss_tcp.log.xz" ]]; then
        echo "Plotting TCP info..."
        ./ss_tcp_viz.py -i ${1}/${pping}/M1/ss_tcp.log* -o ${1}/TCP_stats_${pping}.png -g
    else
        echo "Warning: No TCP data found!"
    fi
done
